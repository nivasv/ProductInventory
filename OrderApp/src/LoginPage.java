import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.*;
import java.util.Calendar;
import java.util.Properties;

/**
 * ****************************************************************************
 * File:LoginPage.java Course: 17655 Project: Assignment 2 Copyright: Copyright
 * (c) 2009 Carnegie Mellon University Versions: 1.0 September 2015.
 * 
* This class defines a GUI application that allows order personnel to login to
 * the orderapp application to place orders.
 * 
*****************************************************************************
 */
/**
 *
 * @author Nivas Washinton
 */
public class LoginPage extends javax.swing.JFrame {

    public static String loggedinUserName = "";
    public String SQLServerIP;
    public String dbuser;
    public String dbpassword;

    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        initComponents();
        Properties prop = new Properties();
        InputStream input = null;
        try {
            input = new FileInputStream("Config.txt");
            // load a properties file
            prop.load(input);
            // get the property value
            SQLServerIP = prop.getProperty("database_ip");
            dbuser = prop.getProperty("dbuser");
            dbpassword = prop.getProperty("dbpassword");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ORDER APPLICATION");

        jLabel2.setText("UserName:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Password:");

        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(13, 13, 13)
                                .addComponent(jPasswordField1)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 74, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(84, 84, 84))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

         // jButton1 is responsible for querying the userinfo database and
        // getting the user credential table. Once retieved, the entered username and password
        // will be checked and it will redirect to the orderapp main page if the credentials
        // given are valid
        String getUsername = jTextField1.getText(); // Get the username from the login page
        String getPassword = new String(jPasswordField1.getPassword()); // Get the password from login page
        // Database parameters
        Boolean connectError = false;       // Error flag
        Connection DBConn = null;           // MySQL connection handle
        String errString = null;            // String for displaying errors
        String msgString = null;            // String for displaying non-error messages
        int executeUpdateVal;               // Return value from execute indicating effected rows
        ResultSet res = null;               // SQL query result set pointer
        Statement s = null;                 // SQL statement pointer

        // Connect to the userinfo database
        try {
            msgString = ">> Establishing Driver...";

            //load JDBC driver class for MySQL
            Class.forName("com.mysql.jdbc.Driver");

            msgString = ">> Setting up URL...";

            //define the data source
            //String SQLServerIP = "localhost";
            String sourceURL = "jdbc:mysql://" + SQLServerIP + ":3306/userinfo";

            msgString = ">> Establishing connection with: " + sourceURL + "...";

            //create a connection to the db - note the default account is "remote"
            //and the password is "remote_pass" - you will have to set this
            //account up in your database
            DBConn = DriverManager.getConnection(sourceURL, dbuser, dbpassword);

        } catch (Exception e) {

            errString = "\nProblem connecting to database:: " + e;

            connectError = true;

        } // end try-catch

        // If we are connected, then we check whether the user credentials are valid 
        // i.e username and password is valid from 
        // usercredential table
        if (!connectError) {
            try {
                s = DBConn.createStatement();
                String queryBuilder = "Select * from usercredential where "
                        + "username = '" + getUsername + "' and "
                        + "password ='" + getPassword + "' and "
                        + "(userrole in ('order_personnel','it_manager'))";

                res = s.executeQuery(queryBuilder);

                //Display the data in the textarea
                if (!res.isBeforeFirst()) {    // checks whether user credential is valid
                    jLabel4.setText("Login failed. Please try again.");
                } else {            // given user credential is valid and redirect to Log Generation page

                    loggedinUserName = getUsername; // assign the looged in username to global variable so that
                    // it can be accessible in tne order placement page
                    try {

                        //define the data source
                        String SQLServerIP = "localhost";
                        String sourceURL = "jdbc:mysql://" + SQLServerIP + ":3306/userinfo";

                        msgString = ">> Establishing connection with: " + sourceURL + "...";

            //create a connection to the db - note the default account is "remote"
                        //and the password is "remote_pass" - you will have to set this
                        //account up in your database
                        DBConn = DriverManager.getConnection(sourceURL, "remote", "remote_pass");

                    } catch (Exception e) {

                        errString = "\nProblem connecting to database:: " + e;

                        connectError = true;

                    } // end try-catch

        // If we are connected, then we insert a user login log inside the 
                    // orderlogin_audit table in userinfo database
                    if (!connectError) {
                        try {

            // Calendar utility used to get the current date and time and 
                            // change it to MM/DD/YYYY date format and hh:mm:ss time format
                            Calendar rightNow = Calendar.getInstance();
                            int TheHour = rightNow.get(rightNow.HOUR_OF_DAY);
                            int TheMinute = rightNow.get(rightNow.MINUTE);
                            int TheSecond = rightNow.get(rightNow.SECOND);
                            int TheDay = rightNow.get(rightNow.DAY_OF_MONTH);
                            int TheMonth = rightNow.get(rightNow.MONTH) + 1;
                            int TheYear = rightNow.get(rightNow.YEAR);

                            String sMonth = (String.valueOf(TheMonth).length() == 1) ? ("0" + String.valueOf(TheMonth)) : String.valueOf(TheMonth);
                            String sDay = (String.valueOf(TheDay).length() == 1) ? ("0" + String.valueOf(TheDay)) : String.valueOf(TheDay);
                            String sHour = (String.valueOf(TheHour).length() == 1) ? ("0" + String.valueOf(TheHour)) : String.valueOf(TheHour);
                            String sMinute = (String.valueOf(TheMinute).length() == 1) ? ("0" + String.valueOf(TheMinute)) : String.valueOf(TheMinute);
                            String sSecond = (String.valueOf(TheSecond).length() == 1) ? ("0" + String.valueOf(TheSecond)) : String.valueOf(TheSecond);

                            String LogDate = sMonth + "/" + sDay + "/" + TheYear;
                            String LogTime = sHour + ":" + sMinute + ":" + sSecond;

                            s = DBConn.createStatement();

                            // insert the order login audit into orderlogin_audit table
                            String SQLstatement = ("insert into orderlogin_audit(UserName,LogTime,LogDate,Activity)"
                                    + "values ('" + loggedinUserName + "','" + LogTime + "','"
                                    + LogDate + "','" + "login" + "');");

                            executeUpdateVal = s.executeUpdate(SQLstatement);

                        } catch (Exception e) {

                            errString = "\nProblem inserting into orderlogin_audit table:: " + e;

                        } // end try-catch
                    } // if connect check
                    dispose();  //dispose the LoginPage jFrame
                    new NewJFrame().setVisible(true); // redirect to NewJFrame jframe i.e. order placement page
                }

            } catch (Exception e) {

                errString = "\nProblem getting user credential table:: " + e;

            } // end try-catch
        } // if connect check


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
