/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.*;
import java.io.*;
import java.util.Properties;

/**
 *
 * @author Nivas Washinton
 */
public class LogGeneration extends javax.swing.JFrame {

    public static final String OrderLogin_FileName = "Orderlogin.txt"; // FileName to generate Order login log text file
    public static final String OrderEntry_FileName = "OrderEntry.txt"; // FileName to generate Order placed entry log text file
    public static final String OrderShipment_FileName = "OrderShipment.txt"; // FileName to generate Order shipment log text file 
    public String SQLServerIP;
    public String dbuser;
    public String dbpassword;

    /**
     * Creates new form LogGeneration
     */
    public LogGeneration() {
        initComponents();
        Properties prop = new Properties();
        InputStream input = null;
        try {
            input = new FileInputStream("Config.txt");
            // load a properties file
            prop.load(input);
            // get the property value
            SQLServerIP = prop.getProperty("database_ip");
            dbuser = prop.getProperty("dbuser");
            dbpassword = prop.getProperty("dbpassword");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Generate Log");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("AUDIT LOG GENERATOR");

        jButton2.setText("LogOut");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("Message:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        // Database parameters
        Boolean connectError = false;       // Error flag
        Connection DBConn = null;           // MySQL connection handle
        String errString = null;            // String for displaying errors
        String msgString = null;            // String for displaying non-error messages
        int executeUpdateVal;               // Return value from execute indicating effected rows
        ResultSet res = null;               // SQL query result set pointer
        Statement s = null;                 // SQL statement pointer

        PrintStream outToFile = null;
        String queryBuilder = "";
        // Connect to the userinfo database
        try {
            msgString = ">> Establishing Driver...";

            //load JDBC driver class for MySQL
            Class.forName("com.mysql.jdbc.Driver");

            msgString = ">> Setting up URL...";

            //define the data source
            //String SQLServerIP = "localhost";
            String sourceURL = "jdbc:mysql://" + SQLServerIP + ":3306/userinfo";

            msgString = ">> Establishing connection with: " + sourceURL + "...";

            //create a connection to the db - note the default account is "remote"
            //and the password is "remote_pass" - you will have to set this
            //account up in your database
            DBConn = DriverManager.getConnection(sourceURL, dbuser, dbpassword);

        } catch (Exception e) {

            errString = "\nProblem connecting to database:: " + e;
            jTextArea1.setText(errString);
            connectError = true;

        } // end try-catch

        // If we are connected, then we can generate the different logs as 3 text files from
        // userinfo database
        if (!connectError) {
            try {
                s = DBConn.createStatement();

                // ----------------------GENERATE ORDER LOGIN LOG TEXT FILE-------------------------------------------
                queryBuilder = "Select * from orderlogin_audit";

                res = s.executeQuery(queryBuilder);

                try {
                    outToFile = new PrintStream(new FileOutputStream(OrderLogin_FileName, false));
                } catch (FileNotFoundException e) {
                    jTextArea1.setText("Cannot open file");
                    return;
                }
                outToFile.println("UserName: \tLog Date(MM/DD/YYYY): \tLog Time(hh:mm:ss) :  \tActivity Done");
                outToFile.println("-----------------------------------------------------------------------------------");
                while (res.next()) {
                    // print the log entry to the text file line by line
                    outToFile.println(res.getString(2) + "\t\t" + res.getString(4) + " \t\t" + res.getString(3)
                            + "\t\t\t" + res.getString(5));

                } // while

               // -----------------------GENERATE ORDER PLACED ENTRY LOG TEXT FILE------------------------------------------
                queryBuilder = "Select * from orderentry_audit";

                res = s.executeQuery(queryBuilder);

                try {
                    outToFile = new PrintStream(new FileOutputStream(OrderEntry_FileName, false));
                } catch (FileNotFoundException e) {
                    jTextArea1.setText("Cannot open file");
                    return;
                }
                outToFile.println("Order Number: \tUsername : \t\tOrder Time(hh:mm:ss) :  \tOrder Date(MM/DD/YYYY)");
                outToFile.println("-----------------------------------------------------------------------------------------");
                while (res.next()) {
                    // print the log entry to the text file line by line
                    outToFile.println(res.getString(3) + "\t\t" + res.getString(2) + " \t\t\t" + res.getString(4)
                            + "\t\t\t\t" + res.getString(5));

                } // while

                 // --------------------------GENERATE ORDER SHIPMENT LOG TEXT FILE---------------------------------------
                queryBuilder = "Select * from ordershipment_audit";

                res = s.executeQuery(queryBuilder);

                try {
                    outToFile = new PrintStream(new FileOutputStream(OrderShipment_FileName, false));
                } catch (FileNotFoundException e) {
                    jTextArea1.setText("Cannot open file");
                    return;
                }
                outToFile.println("OrderNumber: \tShipment Time(hh:mm:ss) : \tShipment Date(MM/DD/YYYY) ");
                outToFile.println("----------------------------------------------------------------------");
                while (res.next()) {
                    // print the log entry to the text file line by line
                    outToFile.println(res.getString(2) + "\t\t" + res.getString(3) + " \t\t\t" + res.getString(4));

                } // while

                // -----------------------------------------------------------------
                String msgText = "3 text files successfully generated.\n "
                        + "1." + OrderLogin_FileName + "\n"
                        + " 2." + OrderEntry_FileName + "\n"
                        + " 3." + OrderShipment_FileName;

                jTextArea1.setText(msgText);
            } catch (Exception e) {

                errString = "\nProblem getting table from database:: " + e;
                jTextArea1.setText(errString);

            } // end try-catch
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        dispose();  // dispose the LogGeneration jFrame
        new LoginPage().setVisible(true); // Open the LoginPage jFrame
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogGeneration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogGeneration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogGeneration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogGeneration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogGeneration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
